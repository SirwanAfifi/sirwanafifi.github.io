{"componentChunkName":"component---src-templates-blog-details-js","path":"/blog/en/visualising-your-iot-data","result":{"data":{"markdownRemark":{"timeToRead":2,"frontmatter":{"date":"March 18th, 2023","title":"Visualising Your IoT Data","tags":["IoT","ESP32","Arduino","Grafana","InfluxDB"],"slug":"visualising-your-iot-data"},"html":"<p>Recently, I've learned a lot about the Internet of Things (IoT) and I just gotta share some of the cool stuff I've found. I'm using the ESP32 module to gather data from a temperature sensor and humidity sensor. I've used the Arduino IDE before, but I've never really used it for anything serious. I've always used it for small projects like blinking LEDs. In one of our projects, we wanted to use this module as a sensor agent. It's really easy to use, cheap, and cost-effective. Its performance is great, and the best thing is that it has WiFi and Bluetooth. If you're interested in more info, you can check out their website.</p>\n  <img src=\"/img/esp32.jpg\" alt=\"esp32\" />\n<p>There are numerous options available for coding this module, including Platform.io and Arduino. For those familiar with C#, you can even use nanoFramework for .NET. Personally, I found the Ardunio much easier to use and I got started with it in no time.</p>\n <img src=\"/img/arduino-ide.png\" alt=\"arduino-ide\" />\n<p>Getting sensor data is easy, just plug the sensor in and upload this code:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`#include <Wire.h>\n#include <Adafruit_BME280.h>\n#include <WiFi.h>\n#include <HTTPClient.h>\n\nconst char* ssid = &quot;...&quot;;\nconst char* password = &quot;...&quot;;\n#define INFLUXDB_TOKEN &quot;...&quot;\n#define INFLUX_URL &quot;http://192.168.10.98:8086/api/v2/write?org=ORG_NAME&bucket=BUCKET_NAME&quot;\n\nWiFiClient espClient;\nAdafruit_BME280 bme;\nHTTPClient http;\n\nvoid setup() {\n  Serial.begin(115200);\n  WiFi.begin(ssid, password);\n  Serial.print(&quot;Connecting&quot;);\n  while (WiFi.status() != WL_CONNECTED) {\n    delay(500);\n    Serial.print(&quot;.&quot;);\n  }\n  Serial.print(&quot;Connected&quot;);\n  Serial.println();\n  Serial.print(&quot;Connected, IP address: &quot;);\n  Serial.println(WiFi.localIP());\n  Wire.begin();\n  bme.begin(0x77);\n}\n\nvoid loop() {\n  String temperature = String(bme.readTemperature());\n  String humidity = String(bme.readHumidity());\n  String postData = &quot;esp32bme28 temperature=&quot; + temperature + &quot;\\n&quot;;\n  postData += &quot;esp32bme28 humidity=&quot; + humidity;\n  http.begin(INFLUX_URL);\n  http.addHeader(&quot;Authorization&quot;, &quot;Token &quot; + String(INFLUXDB_TOKEN));\n  int httpCode = http.POST(postData);\n  Serial.println(httpCode);\n  http.end();\n  delay(1000);\n}`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Wire.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Adafruit_BME280.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;WiFi.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;HTTPClient.h></span></span>\n\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> ssid <span class=\"token operator\">=</span> <span class=\"token string\">\"...\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> password <span class=\"token operator\">=</span> <span class=\"token string\">\"...\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">INFLUXDB_TOKEN</span> <span class=\"token string\">\"...\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">INFLUX_URL</span> <span class=\"token string\">\"http://192.168.10.98:8086/api/v2/write?org=ORG_NAME&amp;bucket=BUCKET_NAME\"</span></span>\n\nWiFiClient espClient<span class=\"token punctuation\">;</span>\nAdafruit_BME280 bme<span class=\"token punctuation\">;</span>\nHTTPClient http<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token number\">115200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  WiFi<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span>ssid<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Connecting\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>WiFi<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> WL_CONNECTED<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Connected\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Connected, IP address: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>WiFi<span class=\"token punctuation\">.</span><span class=\"token function\">localIP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Wire<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  bme<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x77</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  String temperature <span class=\"token operator\">=</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>bme<span class=\"token punctuation\">.</span><span class=\"token function\">readTemperature</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  String humidity <span class=\"token operator\">=</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>bme<span class=\"token punctuation\">.</span><span class=\"token function\">readHumidity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  String postData <span class=\"token operator\">=</span> <span class=\"token string\">\"esp32bme28 temperature=\"</span> <span class=\"token operator\">+</span> temperature <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n  postData <span class=\"token operator\">+=</span> <span class=\"token string\">\"esp32bme28 humidity=\"</span> <span class=\"token operator\">+</span> humidity<span class=\"token punctuation\">;</span>\n  http<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span>INFLUX_URL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  http<span class=\"token punctuation\">.</span><span class=\"token function\">addHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Authorization\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Token \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>INFLUXDB_TOKEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">int</span> httpCode <span class=\"token operator\">=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">POST</span><span class=\"token punctuation\">(</span>postData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>httpCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  http<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>In the code, we start by including the required libraries like <code class=\"language-text\">Wire.h</code> for I2C communication, <code class=\"language-text\">Adafruit_BME280.h</code> for Wi-Fi communication, and <code class=\"language-text\">HTTPClient.h</code> for HTTP communication with InfluxDB. After the we have defined the constants for the Wi-Fi and InfluxDB. Next, we initialize the Wi-Fi and the BME280 sensor within the <code class=\"language-text\">setup()</code> function. Then, in the <code class=\"language-text\">loop()</code> function, we send the temperature and humidity to InfluxDB. The data is sent using the Line Protocol every second.</p>\n  <img src=\"/img/influxdb-sensors_data.jpg\" alt=\"esp32-temperature\" />\n<p>Now that we have the data in InfluxDB, we can visualise it using Grafana. Grafana is a great tool for visualising data. It's easy to use and has a lot of features. It's also free and open-source:</p>\n  <img src=\"/img/grafana-dashboard.jpg\" alt=\"grafana\" />"}},"pageContext":{"slug":"visualising-your-iot-data"}},"staticQueryHashes":[]}