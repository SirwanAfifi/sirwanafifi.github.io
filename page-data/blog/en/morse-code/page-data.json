{"componentChunkName":"component---src-templates-blog-details-js","path":"/blog/en/morse-code","result":{"data":{"markdownRemark":{"timeToRead":2,"frontmatter":{"date":"July 8th, 2019","title":"Morse code","tags":["Algorithm","React","Morse"],"slug":"Programming-challenges-morse-code/"},"html":"<img class=\"center-image img-res\" src=\"/img/morse_code.png\" alt=\"Morse Code table\" />\n<p>Morse Code is a set of dots and dashes (short mark, dot or 'dit' (·) and longer mark, dash or 'dah' (-)). Basically, it's a character encoding scheme for transmitting cryptographic messages which used in telecommunication. Think of it as the early version of texting. The system is named after the American artist Samuel Finley Breese Morse who co-developed an electrical telegraph system at the beginning of 1836. In fact it was heavily used for (secret) transmissions during WWI and WWII. Different combination of dots and dashes will produce different letters it also means that different combination of letters will be eventually your encoded messages.</p>\n<img class=\"center-image img-res\" src=\"/img/International_Morse_Code.svg\" alt=\"Morse Code table\" />\n<p>I thought it might be a good idea to write my name in Morse code to see how it looks like. Since I am a lazy developer, so I ended up writing a React application to do the job for me:</p>\n<img class=\"center-image img-res\" src=\"/img/morse_code_translator.gif\" alt=\"Morse Code video\" />\n<p>Here's the implementation in JavaScript:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const language = {\n  alphabets: {\n    A: &quot;•−&quot;,\n    B: &quot;−•••&quot;,\n    C: &quot;−•−•&quot;,\n    D: &quot;−••&quot;,\n    E: &quot;•&quot;,\n    F: &quot;••−•&quot;,\n    G: &quot;−−•&quot;,\n    H: &quot;••••&quot;,\n    I: &quot;••&quot;,\n    J: &quot;•−−−&quot;,\n    K: &quot;−•−&quot;,\n    M: &quot;−−&quot;,\n    N: &quot;−•&quot;,\n    L: &quot;•−••&quot;,\n    N: &quot;−•&quot;,\n    O: &quot;−−−&quot;,\n    P: &quot;•−−•&quot;,\n    Q: &quot;−−•−&quot;,\n    R: &quot;•−•&quot;,\n    S: &quot;•••&quot;,\n    T: &quot;−&quot;,\n    U: &quot;••−&quot;,\n    V: &quot;••−&quot;,\n    W: &quot;•−−&quot;,\n    X: &quot;−••−&quot;,\n    Y: &quot;−•−−&quot;,\n    Z: &quot;−−••&quot;,\n  },\n  numeral: {\n    &quot;1&quot;: &quot;•−−−−&quot;,\n    &quot;2&quot;: &quot;••−−−&quot;,\n    &quot;3&quot;: &quot;••−−&quot;,\n    &quot;4&quot;: &quot;•••−&quot;,\n    &quot;5&quot;: &quot;•••••&quot;,\n    &quot;6&quot;: &quot;−••••&quot;,\n    &quot;7&quot;: &quot;−−•••&quot;,\n    &quot;8&quot;: &quot;−−−••&quot;,\n    &quot;9&quot;: &quot;−−−−•&quot;,\n    &quot;0&quot;: &quot;−−−−−&quot;,\n  },\n  punctuations: {\n    &quot;•&quot;: &quot;•−•−•−&quot;,\n    &quot;,&quot;: &quot;−−••−−&quot;,\n    &quot;?&quot;: &quot;••−−••&quot;,\n    &quot;:&quot;: &quot;−−−•••&quot;,\n    &quot;;&quot;: &quot;−•−•−•&quot;,\n    &quot;−&quot;: &quot;−••••−&quot;,\n    &quot;/&quot;: &quot;−••−•&quot;,\n    '&quot;': &quot;•−••−•&quot;,\n    &quot;'&quot;: &quot;•−−−−•&quot;,\n    &quot;(&quot;: &quot;−•−−•&quot;,\n    &quot;)&quot;: &quot;−•−−•−&quot;,\n    &quot;=&quot;: &quot;−•••−&quot;,\n    &quot;+&quot;: &quot;•−•−•&quot;,\n    \\$: &quot;••−••−&quot;,\n    q: &quot;•−•−••&quot;,\n    _: &quot;••−−•−&quot;,\n  },\n}\n\nconst translateToMorseCode = input => {\n  const inputArray = [...input]\n  const morseCode = inputArray.map(i => {\n    const code =\n      language.alphabets[i.toUpperCase()] ||\n      language.numeral[i] ||\n      language.punctuations[i]\n    return code || &quot;&quot;\n  })\n  return morseCode.join(&quot; &quot;)\n}\n\nconst translateToEnglish = input => {\n  const inputArray = input.split(&quot; &quot;)\n  const engWord = inputArray.map(i => {\n    const value =\n      Object.keys(language.alphabets).filter(key => {\n        return language.alphabets[key] === i\n      })[0] ||\n      Object.keys(language.punctuations).filter(key => {\n        return language.punctuations[key] === i\n      })[0] ||\n      Object.keys(language.numeral).filter(key => {\n        return language.numeral[key] === i\n      })[0]\n    return value ? value.toLocaleLowerCase() : &quot;&quot;\n  })\n  return engWord.join(&quot; &quot;)\n}`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> language <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">alphabets</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">A</span><span class=\"token operator\">:</span> <span class=\"token string\">\"•−\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">B</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−•••\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">C</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−•−•\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">D</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−••\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">E</span><span class=\"token operator\">:</span> <span class=\"token string\">\"•\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">F</span><span class=\"token operator\">:</span> <span class=\"token string\">\"••−•\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">G</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−−•\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">H</span><span class=\"token operator\">:</span> <span class=\"token string\">\"••••\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">I</span><span class=\"token operator\">:</span> <span class=\"token string\">\"••\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">J</span><span class=\"token operator\">:</span> <span class=\"token string\">\"•−−−\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">K</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−•−\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">M</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−−\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">N</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−•\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">L</span><span class=\"token operator\">:</span> <span class=\"token string\">\"•−••\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">N</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−•\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">O</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−−−\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">P</span><span class=\"token operator\">:</span> <span class=\"token string\">\"•−−•\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">Q</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−−•−\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">R</span><span class=\"token operator\">:</span> <span class=\"token string\">\"•−•\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">S</span><span class=\"token operator\">:</span> <span class=\"token string\">\"•••\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">T</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">U</span><span class=\"token operator\">:</span> <span class=\"token string\">\"••−\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">V</span><span class=\"token operator\">:</span> <span class=\"token string\">\"••−\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">W</span><span class=\"token operator\">:</span> <span class=\"token string\">\"•−−\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">X</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−••−\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">Y</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−•−−\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">Z</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−−••\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">numeral</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">\"1\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"•−−−−\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"2\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"••−−−\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"3\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"••−−\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"4\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"•••−\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"5\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"•••••\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"6\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−••••\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"7\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−−•••\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"8\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−−−••\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"9\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−−−−•\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"0\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−−−−−\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">punctuations</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">\"•\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"•−•−•−\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\",\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−−••−−\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"?\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"••−−••\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\":\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−−−•••\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\";\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−•−•−•\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"−\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−••••−\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"/\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−••−•\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'\"'</span><span class=\"token operator\">:</span> <span class=\"token string\">\"•−••−•\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"'\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"•−−−−•\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"(\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−•−−•\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\")\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−•−−•−\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"=\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"−•••−\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"+\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"•−•−•\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">$</span><span class=\"token operator\">:</span> <span class=\"token string\">\"••−••−\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">q</span><span class=\"token operator\">:</span> <span class=\"token string\">\"•−•−••\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">_</span><span class=\"token operator\">:</span> <span class=\"token string\">\"••−−•−\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">translateToMorseCode</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">input</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> inputArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>input<span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">const</span> morseCode <span class=\"token operator\">=</span> inputArray<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">i</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> code <span class=\"token operator\">=</span>\n      language<span class=\"token punctuation\">.</span>alphabets<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span>\n      language<span class=\"token punctuation\">.</span>numeral<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span>\n      language<span class=\"token punctuation\">.</span>punctuations<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> code <span class=\"token operator\">||</span> <span class=\"token string\">\"\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> morseCode<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">translateToEnglish</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">input</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> inputArray <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> engWord <span class=\"token operator\">=</span> inputArray<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">i</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span>\n      Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>language<span class=\"token punctuation\">.</span>alphabets<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> language<span class=\"token punctuation\">.</span>alphabets<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> i\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span>\n      Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>language<span class=\"token punctuation\">.</span>punctuations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> language<span class=\"token punctuation\">.</span>punctuations<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> i\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span>\n      Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>language<span class=\"token punctuation\">.</span>numeral<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> language<span class=\"token punctuation\">.</span>numeral<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> i\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> value <span class=\"token operator\">?</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> engWord<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Since the original idea of Morse Code was to signal the message in a form perceptible to the human senses, such as sound waves or visible light, so I have added the ability to play a sound while coding the message:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`async display() {\n    this.setState({ loading: true });\n    this.setState({ output: &quot;&quot; });\n    for (let i of [...translateToMorseCode(this.state.input)]) {\n        await sleep(200);\n        if (i === &quot;•&quot;) {\n            playSound();\n        }\n        else if (i === &quot;−&quot;) {\n            playSound();\n            playSound();\n        }\n        this.setState({ output: this.state.output + &quot;&quot; + i });\n    }\n    this.setState({ loading: false });\n}`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">loading</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token keyword\">of</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token function\">translateToMorseCode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">await</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">===</span> <span class=\"token string\">\"•\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">playSound</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">===</span> <span class=\"token string\">\"−\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">playSound</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">playSound</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>output <span class=\"token operator\">+</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">+</span> i <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">loading</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>You can grab the working sample project from <a href=\"https://github.com/SirwanAfifi/morse\">GitHub</a>.</p>"}},"pageContext":{"slug":"Programming-challenges-morse-code/"}},"staticQueryHashes":[]}