{"componentChunkName":"component---src-templates-blog-details-js","path":"/blog/en/web-server-logs","result":{"data":{"markdownRemark":{"timeToRead":3,"frontmatter":{"date":"July 20th, 2021","title":"Web Server Logs","tags":["Web Server","Nginx","Logging"],"slug":"web-server-logs"},"html":"<figure>\n  <img src=\"/web-server-logs.jpeg\" alt=\"Web Server Logs\" />\n  <figcaption class=\"text-center\">Photo by <a href=\"https://unsplash.com/@clemono?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Clem Onojeghuo</a> on <a href=\"https://unsplash.com/s/photos/searching?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>\n  </figcaption>\n</figure>\n<p>An important part of managing software applications effectively is keeping logs, because they provide information about the server's performance and activity and can indicate any issues. An application's behavior has to be analyzed in order to track events and debug any issues.\nIn order to achieve this goal, I was given the task to implement logging into our applications. Our company has several applications, so adding an application log to them all wasn't a good idea. Although We have application level logs in some parts of our systems, but our goal was to centralize them so that we would have easy access to them. It could have been done with application code, but I would have had to change the codebases elsewheres. Hence, I decided to use our web server for the job. By default, Nginx provides out of the box logging which can be enabled with a few lines of code in the config file. <code class=\"language-text\">Error</code> and <code class=\"language-text\">Access</code> logs are the two types of logs in Nginx. Using the first one, you can track anything unexpected that happens. However, I was particularly interested in the second one, which logs all requests to the server as its name suggests. Nginx's logging functionality is enabled by default, so it does not require you to install third-party modules to make it available.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`events {}\n\nhttp {\n  server {\n    listen 80;\n    \n    access_log /sites/files/log.txt;\n    error_log /sites/files/error_log.txt;\n    \n    location / {\n      return 200 &quot;Hello World!&quot;;\n    }\n  }\n}`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">events <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\nhttp <span class=\"token punctuation\">{</span>\n  server <span class=\"token punctuation\">{</span>\n    listen <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n    \n    access_log <span class=\"token operator\">/</span>sites<span class=\"token operator\">/</span>files<span class=\"token operator\">/</span>log<span class=\"token punctuation\">.</span>txt<span class=\"token punctuation\">;</span>\n    error_log <span class=\"token operator\">/</span>sites<span class=\"token operator\">/</span>files<span class=\"token operator\">/</span>error_log<span class=\"token punctuation\">.</span>txt<span class=\"token punctuation\">;</span>\n    \n    location <span class=\"token operator\">/</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">200</span> <span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>By default, the format of the entry in the log file is as follows:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`172.17.0.1 - - [21/Jul/2021:07:24:53 +0000] &quot;GET / HTTP/1.1&quot; 200 12 &quot;-&quot; &quot;Mozilla/5.0....&quot;\n172.17.0.1 - - [21/Jul/2021:07:25:03 +0000] &quot;GET / HTTP/1.1&quot; 200 12 &quot;-&quot; &quot;Mozilla/5.0....&quot;\n172.17.0.1 - - [21/Jul/2021:07:25:05 +0000] &quot;GET /404.html HTTP/1.1&quot; 200 12 &quot;-&quot; &quot;Mozilla/5.0....&quot;\n172.17.0.1 - - [21/Jul/2021:07:25:05 +0000] &quot;GET /favicon.ico HTTP/1.1&quot; 200 12 &quot;http://localhost:9091/404.html&quot; &quot;Mozilla/5.0....&quot;`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token number\">172.17</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span> <span class=\"token operator\">-</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token operator\">/</span>Jul<span class=\"token operator\">/</span><span class=\"token number\">2021</span><span class=\"token operator\">:</span><span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">24</span><span class=\"token operator\">:</span><span class=\"token number\">53</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span><span class=\"token punctuation\">]</span> <span class=\"token string\">\"GET / HTTP/1.1\"</span> <span class=\"token number\">200</span> <span class=\"token number\">12</span> <span class=\"token string\">\"-\"</span> <span class=\"token string\">\"Mozilla/5.0....\"</span>\n<span class=\"token number\">172.17</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span> <span class=\"token operator\">-</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token operator\">/</span>Jul<span class=\"token operator\">/</span><span class=\"token number\">2021</span><span class=\"token operator\">:</span><span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">25</span><span class=\"token operator\">:</span><span class=\"token number\">03</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span><span class=\"token punctuation\">]</span> <span class=\"token string\">\"GET / HTTP/1.1\"</span> <span class=\"token number\">200</span> <span class=\"token number\">12</span> <span class=\"token string\">\"-\"</span> <span class=\"token string\">\"Mozilla/5.0....\"</span>\n<span class=\"token number\">172.17</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span> <span class=\"token operator\">-</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token operator\">/</span>Jul<span class=\"token operator\">/</span><span class=\"token number\">2021</span><span class=\"token operator\">:</span><span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">25</span><span class=\"token operator\">:</span><span class=\"token number\">05</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span><span class=\"token punctuation\">]</span> <span class=\"token string\">\"GET /404.html HTTP/1.1\"</span> <span class=\"token number\">200</span> <span class=\"token number\">12</span> <span class=\"token string\">\"-\"</span> <span class=\"token string\">\"Mozilla/5.0....\"</span>\n<span class=\"token number\">172.17</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span> <span class=\"token operator\">-</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token operator\">/</span>Jul<span class=\"token operator\">/</span><span class=\"token number\">2021</span><span class=\"token operator\">:</span><span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">25</span><span class=\"token operator\">:</span><span class=\"token number\">05</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span><span class=\"token punctuation\">]</span> <span class=\"token string\">\"GET /favicon.ico HTTP/1.1\"</span> <span class=\"token number\">200</span> <span class=\"token number\">12</span> <span class=\"token string\">\"http://localhost:9091/404.html\"</span> <span class=\"token string\">\"Mozilla/5.0....\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Additionally, we can disable logging for certain requests. For example, let's say we do not want to log the <code class=\"language-text\">/admin</code> request:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`location /admin {\n  access_log off; // highlight-line\n  return 200 &quot;Admin page&quot;;\n}`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">location <span class=\"token operator\">/</span>admin <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  access_log off<span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">return</span> <span class=\"token number\">200</span> <span class=\"token string\">\"Admin page\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Our logs should be stored slightly differently by adding more information to them, such as the full name of the user. We had a bit of a challenge to figure this out since the only way to determine who sent the request was by decoding the authorization token. Here is what we wanted in the log file:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`remote_address - user_full_name - URL(request_uri) - time_local - user_agent`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">remote_address <span class=\"token operator\">-</span> user_full_name <span class=\"token operator\">-</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">(</span>request_uri<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> time_local <span class=\"token operator\">-</span> user_agent</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>However, customizing the log is pretty simple, all we need to do is define the format:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`events {}\n\nhttp {\n  log_format custom '\\$remote_addr - USERNAME - URL(\\$request_uri) - \\$time_local - \\$http_user_agent'; // highlight-line\n\n  server {\n    listen 80;\n    \n    access_log /sites/files/log.txt custom; // highlight-line\n    error_log /sites/files/error_log.txt;\n    \n    location / {\n      return 200 &quot;Hello World!&quot;;\n    }\n  }\n}`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">events <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\nhttp <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  log_format custom <span class=\"token string\">'$remote_addr - USERNAME - URL($request_uri) - $time_local - $http_user_agent'</span><span class=\"token punctuation\">;</span></span>\n  server <span class=\"token punctuation\">{</span>\n    listen <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n    \n<span class=\"gatsby-highlight-code-line\">    access_log <span class=\"token operator\">/</span>sites<span class=\"token operator\">/</span>files<span class=\"token operator\">/</span>log<span class=\"token punctuation\">.</span>txt custom<span class=\"token punctuation\">;</span></span>    error_log <span class=\"token operator\">/</span>sites<span class=\"token operator\">/</span>files<span class=\"token operator\">/</span>error_log<span class=\"token punctuation\">.</span>txt<span class=\"token punctuation\">;</span>\n    \n    location <span class=\"token operator\">/</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">200</span> <span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">user_full_name</code> is the tricky part. The good news is that Nginx provides JavaScript support via <code class=\"language-text\">njs</code>. All we need to do is write our JavaScript logic (the syntax is limited to ECMAScript 5.1) inside a file and then invoke it from our configuration file. Within the function, we have access to <code class=\"language-text\">Request</code> and <code class=\"language-text\">Response</code> objects:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// http.js\nfunction jwt(data) {\n    var parts = data.split('.').slice(0,2)\n        .map(v => Buffer.from(v, 'base64url').toString())\n        .map(JSON.parse);\n    return { headers: parts[0], payload: parts[1] };\n}\n\nfunction jwt_payload_user(request) {\n    try {\n      var auth = request.headersIn.Authorization;\n      return jwt(auth.slice(7)).payload.profile.fulleName;\n    } catch {\n      return &quot;Anonymous&quot;;\n    }\n}\n\nexport default {jwt_payload_user}`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">// http.js</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">jwt</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> parts <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> <span class=\"token string\">'base64url'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span>parse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> headers<span class=\"token operator\">:</span> parts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> payload<span class=\"token operator\">:</span> parts<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">jwt_payload_user</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">request</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> auth <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>headersIn<span class=\"token punctuation\">.</span>Authorization<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">jwt</span><span class=\"token punctuation\">(</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>payload<span class=\"token punctuation\">.</span>profile<span class=\"token punctuation\">.</span>fulleName<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">\"Anonymous\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>jwt_payload_user<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>We can then import the above file into our Nginx configuration and use it:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`load_module modules/ngx_http_js_module.so; // highlight-line\n\nevents {}\n\nhttp {\n  js_import /sites/files/http.js; // highlight-line\n  js_set \\$user_full_name http.jwt_payload_user; // highlight-line\n\n  log_format custom '\\$remote_addr - \\$user_full_name - URL(\\$request_uri) - \\$time_local - \\$http_user_agent'; // highlight-line\n\n  server {\n    listen 80;\n    \n    access_log /sites/files/log.txt custom;\n    error_log /sites/files/error_log.txt;\n    \n    location / {\n      return 200 &quot;Hello World!&quot;;\n    }\n  }\n}`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\">load_module modules<span class=\"token operator\">/</span>ngx_http_js_module<span class=\"token punctuation\">.</span>so<span class=\"token punctuation\">;</span></span>\nevents <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\nhttp <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  js_import <span class=\"token operator\">/</span>sites<span class=\"token operator\">/</span>files<span class=\"token operator\">/</span>http<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  js_set $user_full_name http<span class=\"token punctuation\">.</span>jwt_payload_user<span class=\"token punctuation\">;</span></span>\n<span class=\"gatsby-highlight-code-line\">  log_format custom <span class=\"token string\">'$remote_addr - $user_full_name - URL($request_uri) - $time_local - $http_user_agent'</span><span class=\"token punctuation\">;</span></span>\n  server <span class=\"token punctuation\">{</span>\n    listen <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n    \n    access_log <span class=\"token operator\">/</span>sites<span class=\"token operator\">/</span>files<span class=\"token operator\">/</span>log<span class=\"token punctuation\">.</span>txt custom<span class=\"token punctuation\">;</span>\n    error_log <span class=\"token operator\">/</span>sites<span class=\"token operator\">/</span>files<span class=\"token operator\">/</span>error_log<span class=\"token punctuation\">.</span>txt<span class=\"token punctuation\">;</span>\n    \n    location <span class=\"token operator\">/</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">200</span> <span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"}},"pageContext":{"slug":"web-server-logs"}},"staticQueryHashes":[]}