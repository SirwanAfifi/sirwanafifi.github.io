{"componentChunkName":"component---src-templates-blog-details-js","path":"/blog/fa/golang-basics","result":{"data":{"markdownRemark":{"timeToRead":2,"frontmatter":{"date":"October 13th, 2021","title":"Golang Notes","tags":["Golang"],"slug":"golang-basics"},"html":"<p>مدتی است در حال یادگیری Golang هستم. Golang یک زبان statically complied است که توسط Google توسعه داده شده است. اینجا نکاتی که در مورد Golang یاد میگیرم رو سعی میکنم به صورت پراکنده به اشتراک بذارم.</p>\n <img src=\"/img/golang.png\" alt=\"golang\" />\n<h2>توابع</h2>\n<h4>Naked function</h4>\n<blockquote class=\"twitter-tweet\"><p lang=\"fa\" dir=\"rtl\">توی Go علاوه بر اینکه یک تابع میتونه چند خروجی داشته باشه؛ امکان implicit return رو هم داریم؛ توی TS , CSharp باید از Tuple استفاده کنیم اما تفاوتش اینجاست که توی CSharp و JS/TS خروجی در نهایت یک مقداره اما توی Go عملاً چند مقدار هستش. <a href=\"https://t.co/vvI3tiktdr\">pic.twitter.com/vvI3tiktdr</a></p>&mdash; Sirwan Afifi (@SirwanAfifi) <a href=\"https://twitter.com/SirwanAfifi/status/1445074027001810959?ref_src=twsrc%5Etfw\">October 4, 2021</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h4>Closure</h4>\n<blockquote class=\"twitter-tweet\"><p lang=\"fa\" dir=\"rtl\">اینجا یکی از کاربردهای Closure پیاده‌سازی Middleware هستش:<a href=\"https://twitter.com/hashtag/Golang?src=hash&amp;ref_src=twsrc%5Etfw\">#Golang</a> <a href=\"https://t.co/8pX9wHENjQ\">pic.twitter.com/8pX9wHENjQ</a></p>&mdash; Sirwan Afifi (@SirwanAfifi) <a href=\"https://twitter.com/SirwanAfifi/status/1444194945250873345?ref_src=twsrc%5Etfw\">October 2, 2021</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2>Loop</h2>\n<p>توی Golang تنها یک مدل loop داریم و اونم for هستش که به دو حالت میشه اون رو نوشت:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`for i := 0; i < len(items); i++ {\n  fmt.Println(items[i])\n}\n\nfor _, item := range items {\n  fmt.Println(item)\n}`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">{</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> item <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> items <span class=\"token punctuation\">{</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Array</h2>\n<p>در Go برای تعریف آرایه دو راه داریم؛ یکی اینکه آرایه با سایز مشخص تعیین کنیم یا اینکه سایز آرایه را داینامیک در نظر بگیرم؛ به حالت دوم Slice گفته میشود:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// Fixed Array\nusers := [2]string{ &quot;Sirwan&quot;, &quot;Sana&quot; }\n\n// Slice\nusers := []string{ &quot;Sirwan&quot;, &quot;Sana&quot; }`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token comment\">// Fixed Array</span>\nusers <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">{</span> <span class=\"token string\">\"Sirwan\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Sana\"</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Slice</span>\nusers <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">{</span> <span class=\"token string\">\"Sirwan\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Sana\"</span> <span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>برای اضافه کردن یک آیتم به Slice Array میتوانیم از تابع append استفاده کنیم:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`users := []string{ &quot;Sirwan&quot;, &quot;Sana&quot; }\nusers = append(users, &quot;Kaywan&quot;)`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\">users <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">{</span> <span class=\"token string\">\"Sirwan\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Sana\"</span> <span class=\"token punctuation\">}</span>\nusers <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Kaywan\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h2>Maps</h2>\n<p>خیلی شبیه Record در TS هستند:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`user := map[string]string{ &quot;name&quot;: &quot;Sirwan&quot;, &quot;lastName&quot;: &quot;Afifi&quot; }\n\n// Example:\nuser := map[int] map[string]string {\n\t1: {&quot;firstName&quot;: &quot;Sirwan&quot;, &quot;lastName&quot;: &quot;Afifi&quot;},\n\t2: {&quot;firstName&quot;: &quot;Kaywan&quot;, &quot;lastName&quot;: &quot;Afifi&quot;},\n\t3: {&quot;firstName&quot;: &quot;Sana&quot;, &quot;lastName&quot;: &quot;Afifi&quot;},\n}\n\nfor _, u := range user {\n\tfor k, v := range u {\n\t\tfmt.Printf(&quot;%s: %s \\t&quot;, k, v)\n\t}\n\tfmt.Println()\n\tfmt.Println(strings.Repeat(&quot;*&quot;, 40))\n\tfmt.Println()\n}`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\">user <span class=\"token operator\">:=</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">{</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Sirwan\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"lastName\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Afifi\"</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Example:</span>\nuser <span class=\"token operator\">:=</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token number\">1</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"firstName\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Sirwan\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"lastName\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Afifi\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token number\">2</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"firstName\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Kaywan\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"lastName\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Afifi\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token number\">3</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"firstName\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Sana\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"lastName\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Afifi\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> u <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> user <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> u <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: %s \\t\"</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>strings<span class=\"token punctuation\">.</span><span class=\"token function\">Repeat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Struct</h2>\n<p>توسط Struct میتوانیم یک type تعریف کنیم:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`user := User{firstName: &quot;Sirwan&quot;, lastName: &quot;Afifi&quot;}`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\">user <span class=\"token operator\">:=</span> User<span class=\"token punctuation\">{</span>firstName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Sirwan\"</span><span class=\"token punctuation\">,</span> lastName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Afifi\"</span><span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<blockquote class=\"twitter-tweet\"><p lang=\"fa\" dir=\"rtl\">Go از unnamed structها پشتیبانی میکنه؛ خوبیش اینکه یک unnamed struct رو میتونیم به یک named struct اساین کنیم (به شرطی که ساختارشون یکی باشه) به این میگن structural typing ولی اگر بخوایم یک named struct رو به یک named struct دیگه اساین کنیم باید حتماً تایپ مقصد رو تعیین کنیم: <a href=\"https://t.co/TFMHVsMmvq\">pic.twitter.com/TFMHVsMmvq</a></p>&mdash; Sirwan Afifi (@SirwanAfifi) <a href=\"https://twitter.com/SirwanAfifi/status/1449641225628307457?ref_src=twsrc%5Etfw\">October 17, 2021</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>"}},"pageContext":{"slug":"golang-basics","lang":"FA"}},"staticQueryHashes":[]}